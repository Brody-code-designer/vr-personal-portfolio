/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef, useState} from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import kakashiGLB from "./kakashi.glb"
import {useBox, useSphere} from "@react-three/cannon";
import { useFrame, useThree } from '@react-three/fiber';
import { useKeyboardControls } from '../hooks/useKeyboardControls';


export default function   Kakashi(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(kakashiGLB)
  const { actions } = useAnimations(animations, group)

  const [player] = useBox(() => ({
    mass: 1,
    rotation: [Math.PI / 2, 0, -Math.PI /2],
    position: [0, 0, -2],
    // type: 'Dynamic',
    // ...props
  }))

  const {
    moveForward,
    moveBackward,
    moveLeft,
    moveRight,
    jump
} = useKeyboardControls



  useEffect(() => {
    if (props.walking === true) {
    actions[props.kakashiAction].reset().fadeIn(0.5).play()
    return () => actions[props.kakashiAction].fadeOut(0.5)
    } else {
      actions[props.kakashiAction].fadeOut(1).stop()
    }
  }, [actions, props.kakashiAction, props.walking]);
  // console.log('Kakashi Actions:', actions.walk)

  //This enables the 3d-model to appear and disappear from canvas
  const [visible, setVisible] = useState(false)

  useEffect( () => {
    if (props.name === 'kakashi')
      return setVisible(true)
    else
      return setVisible(false)
  }, [props.name])

  // const {camera} = useThree()

  function degInRad(deg) {
    return deg * Math.PI / 180;
}

const rotationRef = useRef()

  useFrame( ({ clock }) => {
  // player.current.rotation.z += (moveLeft ? degInRad(1) : 0 || moveRight ? degInRad(-1) : 0)
player.current.rotation.z += degInRad(1) 
})

  return (
    <group ref={group} dispose={null}>
      <group
          ref={player}
          // rotation={[Math.PI / 2, 0, Math.PI]}
          // position={[0, 1, 0]}
          scale={0.01}
          visible={visible}>
        <primitive object={nodes.mixamorigHips} ref={rotationRef} />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_1.geometry}
          material={materials.Model001_Material001}
          skeleton={nodes.Hatake_Kakashi_1.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_2.geometry}
          material={materials.Model001_Material002}
          skeleton={nodes.Hatake_Kakashi_2.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_3.geometry}
          material={nodes.Hatake_Kakashi_3.material}
          skeleton={nodes.Hatake_Kakashi_3.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_4.geometry}
          material={nodes.Hatake_Kakashi_4.material}
          skeleton={nodes.Hatake_Kakashi_4.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_5.geometry}
          material={nodes.Hatake_Kakashi_5.material}
          skeleton={nodes.Hatake_Kakashi_5.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_6.geometry}
          material={nodes.Hatake_Kakashi_6.material}
          skeleton={nodes.Hatake_Kakashi_6.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_7.geometry}
          material={nodes.Hatake_Kakashi_7.material}
          skeleton={nodes.Hatake_Kakashi_7.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_8.geometry}
          material={materials.Model001_Material008}
          skeleton={nodes.Hatake_Kakashi_8.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_9.geometry}
          material={materials.Model001_Material009}
          skeleton={nodes.Hatake_Kakashi_9.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_10.geometry}
          material={nodes.Hatake_Kakashi_10.material}
          skeleton={nodes.Hatake_Kakashi_10.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_11.geometry}
          material={nodes.Hatake_Kakashi_11.material}
          skeleton={nodes.Hatake_Kakashi_11.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_12.geometry}
          material={nodes.Hatake_Kakashi_12.material}
          skeleton={nodes.Hatake_Kakashi_12.skeleton}
        />
        <skinnedMesh
            castShadow
          geometry={nodes.Hatake_Kakashi_13.geometry}
          material={nodes.Hatake_Kakashi_13.material}
          skeleton={nodes.Hatake_Kakashi_13.skeleton}
        />
      </group>
    </group>
  )
}

useGLTF.preload(kakashiGLB)
